-#  Copyright (c) 2012-2015, Pfadibewegung Schweiz. This file is part of
-#  hitobito_pbs and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_pbs.

= field_set_tag do
  - entry.used?(:advisor_id) do
    = f.labeled_person_field :advisor

  - entry.used?(:language_de) do
    = f.labeled(:course_languages) do
      - Event::Course::LANGUAGES.each do |lang|
        = f.boolean_field("language_#{lang}".to_sym, caption: t(".language_#{lang}"))

  - if can?(:modify_superior, entry)
    - entry.used?(:express_fee) do
      = f.labeled_text_area :express_fee

    - entry.used?(:training_days) do
      = f.labeled_input_field(:training_days, maxlength: 10)

  - entry.used?(:bsv_days) do
    = f.labeled_input_field :bsv_days

  - entry.used?(:j_s_kind) do
    = f.labeled(:j_s_kind) do
      = f.inline_radio_button(:j_s_kind, '', t('.j_s_kind_none'), false)
      - Event::Camp::J_S_KINDS.each do |kind|
        = f.inline_radio_button(:j_s_kind, kind, t(".j_s_kind_#{kind}"), false)

  - j_s_security_attrs = entry.used_attributes(:j_s_security_snow,
                                               :j_s_security_mountain,
                                               :j_s_security_water)
  - if j_s_security_attrs.present?
    = f.labeled(:j_s_security) do
      - j_s_security_attrs.each do |attr|
        = f.boolean_field(attr, { caption: Event.human_attribute_name(attr) })

  = render 'expected_participants_fields', f: f

  - entry.used?(:parent_id) do
    = field_set_tag t('event.hierarchy') do

      = f.hidden_field :parent_id
      - if entry.super_camp
        = f.labeled_readonly_value(:super_camp,
                                   label: t('.supercamp'),
                                   value: format_camp_name_with_groups(entry.super_camp, link: true),
                                   help_inline: supercamp_remove_link(entry))
      - else
        = f.labeled(:attach_to_supercamp, '&nbsp;'.html_safe) do
          = action_button(t('.attach_to_supercamp'),
            group_supercamps_path(entry.groups.first, camp_id: entry.id),
            nil,
            data: { method: :get },
            remote: true)

      = f.labeled(:allow_sub_camps, '&nbsp;'.html_safe) do
        = f.boolean_field :allow_sub_camps,
                          caption: Event::Camp.human_attribute_name(:allow_sub_camps),
                          readonly: entry.sub_camps.any?

